services:
  database:
    build: 
      context: ./database
      dockerfile: Dockerfile
    restart: always
    container_name: database 
    environment:
      MYSQL_ROOT_PASSWORD: ${MYSQL_ROOT_PASSWORD:-root}
      MYSQL_PASSWORD: ${MYSQL_PASSWORD:-password}
      MYSQL_DATABASE: ${MYSQL_DATABASE:-FlorDaCidade}
      MYSQL_USER: ${MYSQL_USER:-user}
    ports:
      - "3306:3306"
    expose:
      - "3306"
    volumes:
      - ./database/data:/var/lib/mysql
      - ./database/init.sql:/docker-entrypoint-initdb.d/init.sql
    networks:
      - flor-da-cidade-network

  api:
    container_name: api
    depends_on:
      - database
    build:
      context: ./api
      dockerfile: Dockerfile
    ports:
      - "8080:8080"
    networks:
      - flor-da-cidade-network
    volumes:
      - ./api:/app
    env_file:
      - ./.env

  web:
    container_name: web
    depends_on:
      - database
    build:
      context: ./web 
      dockerfile: Dockerfile
    ports:
      - "4200:4200"
    volumes:
      - ./web:/app
    
  phpAdmin:
    container_name: phpAdmin
    depends_on:
      - database 
    image: phpmyadmin/phpmyadmin
    environment:
      PMA_HOST: ${MYSQL_HOST:-database}
      PMA_PORT: 3306
      MYSQL_ROOT_PASSWORD: ${MYSQL_ROOT_PASSWORD:-root} 
    ports:
      - 8081:80 
    networks:
      - flor-da-cidade-network

networks:
  flor-da-cidade-network:
    driver: bridge